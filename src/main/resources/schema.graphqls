
input Contact{
    phoneNumber: String!
    emergencyNumber: String!
}
input Bio {
    sex: String
    birthDate: String
    contact: Contact!
}

input Patient {
    bio: Bio!
    firstName: String
    lastName: String
}

### Types

type ContactOut{
    id: ID!
    phoneNumber: String!
    emergencyNumber: String!
}

type BioOut {
    id: ID!
    sex: String
    birthDate: String
    contact: ContactOut!
}

type PatientOutput {
    id: ID!
    bio: BioOut!
    firstName: String
    lastName: String
}

type Color {
    id: ID!
    name: String
}

type Vehicle {
    id: ID!,
    type: String,
    modelCode: String,
    brandName: String,
    launchDate: String
    color: Color
}

type Query {
    # Vehicles Query
    vehicles(count: Int):[Vehicle]!
    # Single vehicle
    vehicle(id: ID):Vehicle
    # Colors Query
    colors(count: Int): [Color]!
    # single Color instance by id
    color(id: ID): Color
    # All patients
    patients:[PatientOutput]!
}

type Mutation {
    # Vehicle Mutation
    createVehicle(type: String!, modelCode: String!, brandName: String, launchDate: String, color: Int):Vehicle
    # Create a Color instance
    createColor(name: String!): Color
    # Update a color instance
    updateColor(id: Int, name: String):Color!
    # Delete a Color instance
    deleteColor(id: Int): Boolean
    # Create a Patient
    createPatient(patient: [Patient!]): [PatientOutput!]!
}